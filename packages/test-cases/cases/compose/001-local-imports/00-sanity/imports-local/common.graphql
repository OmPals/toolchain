type CommonType {
  prop: UInt8!
  nestedObject: NestedType!
  objectArray: [[ArrayObject]]!
  enum: CommonEnum!
  union: CommonUnion!
}

type NestedType {
  prop: String!
}

type ArrayObject {
  prop: String!
}

type MemberTypeObj {
  propA: Int!
}

type MemberTypeA {
  nested: MemberTypeObj!
}

type MemberTypeB {
  propB: String!
}

enum CommonEnum {
  STRING
  BYTES
}

union CommonUnion = MemberTypeA | MemberTypeB
type IgnoredType1 {
  prop: IgnoredType2
}

type IgnoredType2 {
  prop: String
}
