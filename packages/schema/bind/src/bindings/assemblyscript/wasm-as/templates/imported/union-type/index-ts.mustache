{{#__commonImport}}
export { {{type}} } from "../../common";
{{/__commonImport}}
{{^__commonImport}}
import {
  Read,
  Write,
  Nullable,
  BigInt,
  JSON
} from "@web3api/wasm-as";
import {
  serialize{{type}},
  deserialize{{type}},
  write{{type}},
  read{{type}}
} from "./serialization";
import * as Types from "..";

export abstract class {{type}} {

  static toBuffer(type: {{type}}): ArrayBuffer {
    return serialize{{type}}(type);
  }

  static fromBuffer(buffer: ArrayBuffer): {{type}} {
    return deserialize{{type}}(buffer);
  }

  static write(writer: Write, type: {{type}}): void {
    write{{type}}(writer, type);
  }

  static read(reader: Read): {{type}} {
    return read{{type}}(reader);
  }

  {{#memberTypes}}
  get is{{type}}(): boolean {
    return this instanceof UnionMember_{{type}};
  }

  get {{type}}(): Types.{{type}} {
    if (this instanceof UnionMember_{{type}}) {
      return (this as UnionMember_{{type}}).instance;
    }

    throw new Error("Union '{{union}}' is not of type '{{type}}'");
  }

  {{/memberTypes}}
  static create<T>(value: T): {{type}} {
    {{#memberTypes}}
    if (value instanceof Types.{{type}}) {
      return new UnionMember_{{type}}(value);
    }
    {{/memberTypes}}

    throw new Error("Value does not correspond to any {{type}} member type");
  }
}

  {{#memberTypes}}
class UnionMember_{{type}} extends {{union}} {
  constructor(private _instance: Types.{{type}}) {
    super();
  }

  get instance(): Types.{{type}} {
    return this._instance;
  }
}
  {{/memberTypes}}
{{/__commonImport}}