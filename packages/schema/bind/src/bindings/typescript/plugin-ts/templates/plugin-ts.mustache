/// NOTE: This is an auto-generated file.
///       All modifications will be overwritten.

import {
  Plugin,
  PluginFactory,
  PluginPackageManifest,
  PluginModules,
} from "@web3api/core-js";
{{#modules}}
import { {{#toClassName}}{{name}}{{/toClassName}}, {{#toClassName}}{{name}}{{/toClassName}}Config } from "../{{name}}";
{{/modules}}
import { manifest } from "./manifest";

export interface {{#toClassName}}{{projectName}}{{/toClassName}}PluginConfigs {
{{#modules}}
  {{name}}: {{#toClassName}}{{name}}{{/toClassName}}Config;
{{/modules}}
}

export class {{#toClassName}}{{projectName}}{{/toClassName}}Plugin implements Plugin {
  constructor(private _configs: {{#toClassName}}{{projectName}}{{/toClassName}}PluginConfigs) { }

  public static manifest(): PluginPackageManifest {
    return manifest;
  }

  public getModules(): PluginModules {
    return {
      {{#modules}}
      {{name}}: new {{#toClassName}}{{name}}{{/toClassName}}(this._configs.{{name}}),
      {{/modules}}
    };
  }
}

export const {{#toFuncName}}{{projectName}}{{/toFuncName}}Plugin: PluginFactory<{{#toClassName}}{{projectName}}{{/toClassName}}PluginConfigs> = (
  opts: {{#toClassName}}{{projectName}}{{/toClassName}}PluginConfigs
) => {
  return {
    factory: () => new {{#toClassName}}{{projectName}}{{/toClassName}}Plugin(opts),
    manifest: manifest,
  };
};

export const plugin = {{#toFuncName}}{{projectName}}{{/toFuncName}}Plugin;
