// @ts-ignore
import * as Types from "./";

// @ts-ignore
import {
  Client,
  InvokeApiResult
} from "@web3api/core-js";

export type UInt = number;
export type UInt8 = number;
export type UInt16 = number;
export type UInt32 = number;
export type Int = number;
export type Int8 = number;
export type Int16 = number;
export type Int32 = number;
export type Bytes = Uint8Array;
export type BigInt = string;
export type BigNumber = string;
export type String = string;
export type Boolean = boolean;
{{#objectTypes}}

export interface {{type}} {
  {{#properties}}
  {{name}}{{^required}}?{{/required}}: {{#toTypescript}}{{toGraphQLType}}{{/toTypescript}};
  {{/properties}}
}
{{/objectTypes}}
{{#enumTypes}}

export enum {{type}}Enum {
  {{#constants}}
  {{.}},
  {{/constants}}
}

export type {{type}}String =
  {{#constants}}
  | "{{.}}"
  {{/constants}}

export type {{type}} = {{type}}Enum | {{type}}String;
{{/enumTypes}}
{{#importedObjectTypes.length}}

/// Imported Objects START ///
{{#importedObjectTypes}}

/* URI: "{{uri}}" */
export interface {{type}} {
  {{#properties}}
  {{name}}{{^required}}?{{/required}}: {{#toTypescript}}{{toGraphQLType}}{{/toTypescript}};
  {{/properties}}
}
{{/importedObjectTypes}}

/// Imported Objects END ///
{{/importedObjectTypes.length}}
{{#importedEnumTypes.length}}

/// Imported Enums START ///
{{#importedEnumTypes}}

/* URI: "{{uri}}" */
export enum {{type}}Enum {
  {{#constants}}
  {{.}},
  {{/constants}}
}

export type {{type}}String =
  {{#constants}}
  | "{{.}}"
  {{/constants}}

export type {{type}} = {{type}}Enum | {{type}}String;
{{/importedEnumTypes}}

/// Imported Enums END ///
{{/importedEnumTypes.length}}
{{#importedModuleTypes.length}}

/// Imported Queries START ///
{{#importedModuleTypes}}
{{#methods}}

/* URI: "{{parent.uri}}" */
interface {{parent.type}}_Input_{{name}} extends Record<string, unknown> {
  {{#arguments}}
  {{name}}{{^required}}?{{/required}}: {{#toTypescript}}{{toGraphQLType}}{{/toTypescript}};
  {{/arguments}}
}
{{/methods}}

/* URI: "{{uri}}" */
export const {{type}} = {
  {{#methods}}
  {{name}}: async (
    input: {{parent.type}}_Input_{{name}},
    client: Client,
    uri: string = "{{parent.uri}}"
  ): Promise<InvokeApiResult<{{#return}}{{#toTypescript}}{{toGraphQLType}}{{/toTypescript}}{{/return}}>> => {
    return client.invoke<{{#return}}{{#toTypescript}}{{toGraphQLType}}{{/toTypescript}}{{/return}}>({
      uri,
      module: "{{type}}",
      method: "{{name}}",
      input
    });
  }{{^last}},{{/last}}
  {{^last}}

  {{/last}}
  {{/methods}}
}
{{/importedModuleTypes}}

/// Imported Queries END ///
{{/importedModuleTypes.length}}